---
layout: post
title: Vim - Notes
date: 2016-12-11 16:35:17 +0300
access: public
comments: true
categories: [vim]
---

<!-- more -->

<!-- prettier-ignore -->
* TOC
{:toc}
<hr>

interactive history of commands
-------------------------------

`q:`

- opens command-editing window with history of commands
- commands can be edited in-place and run with `<C-CR>`
- can also be opened with `<C-f>` when typing ex command
  (can be useful to type/edit complex commands)

global command
--------------

`:g`

<http://disq.us/p/dkhy28>:

> The global command is actually the origin of grep's name - :g/re/p would
> print out all lines matching the regular expression "re".

delete all lines containing a pattern:

`:g/foo/d`

call vs. exec (execute)
-----------------------

1. <http://stackoverflow.com/questions/18178768/vimscript-call-vs-execute>

- `call` - used to call function: `call s:GoToPrevTab()`
- `exec` - used to evaluate string: `exec 'tabnext ' . g:lasttabnr`

local functions and their usage in autocommands and mappings
------------------------------------------------------------

1. <http://vim.1045645.n5.nabble.com/lt-SID-gt-or-s-General-questions-about-functions-td4297515.html#a4298658>
2. `help :local-function`

say, we have a local function (a function local to a script, starts with `s:`):

```vim
function! s:GoToPrevTab()
  ...
endfunction
```

inside autocommands it can be called as is:

```vim
augroup tabs
  autocmd!
  autocmd TabEnter * call s:GoToPrevTab()
augroup END
```

but inside mappings you must prefix its name with `<SID>` (instead of `s:`):

```vim
nnoremap <C-Tab> :call <SID>GoToPrevTab()<CR>
```

filetype-specific settings
--------------------------

filetype-specific settings can be set in 2 ways:

- in _~/.vim/vimrc_ (or any Vim file sourced from it)

  _~/.vim/autocommands.vim_:

  ```vim
  augroup filetypes
    autocmd!
    autocmd FileType qf setlocal colorcolumn= cursorline nonumber scrolloff=0
  augroup END
  ```

- in _~/.vim/ftplugin/\<filetype>.vim_

  _~/.vim/ftplugin/qf.vim_:

  ```vim
  setlocal colorcolumn=
  setlocal cursorline
  setlocal nonumber
  setlocal scrolloff=0
  ```

  > http://learnvimscriptthehardway.stevelosh.com/chapters/42.html#vimftplugin
  >
  > Because these files are run every time a buffer's filetype is set they
  > must only set buffer-local options! If they set options globally they
  > would overwrite them for all open buffers!

  => set buffer-local options only in `ftplugin` files:

  ```vim
  " correct
  iabbrev <buffer> -> →
  " not correct
  iabbrev -> →
  ```
